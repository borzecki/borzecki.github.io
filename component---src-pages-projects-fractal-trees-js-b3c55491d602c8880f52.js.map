{"version":3,"sources":["webpack:///./src/components/input/range.js","webpack:///./src/pages/projects/fractal-trees.js"],"names":["RangeInput","label","min","max","step","value","onChange","type","e","parseInt","target","Draw","canvas","useRef","useState","length","setLength","angle","setAngle","useEffect","ctx","current","getContext","clearRect","width","height","draw","first","startX","startY","len","branchWidth","beginPath","save","translate","rotate","Math","PI","lineWidth","moveTo","lineTo","stroke","restore","ref"],"mappings":"+JAmBeA,EAhBI,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClD,OACE,8BACE,yBAAQL,GACR,qBACEM,KAAK,QACLL,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACNC,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASG,SAASD,EAAEE,OAAOL,aCsDnCM,UAzCF,WACX,IAAMC,EAASC,mBADE,EAIWC,mBAAS,KAA9BC,EAJU,KAIFC,EAJE,OAKSF,mBAAS,IAA5BG,EALU,KAKHC,EALG,KAajB,OANAC,qBAAU,WACR,IAAMC,EAAMR,EAAOS,QAAQC,WAAW,MACtCF,EAAIG,UAAU,EAAG,EAAGX,EAAOS,QAAQG,MAAOZ,EAAOS,QAAQI,QA/BhD,SAAPC,EAAQN,EAAKO,EAAOC,EAAQC,EAAQC,EAAKb,EAAOc,GACpDX,EAAIY,YACJZ,EAAIa,OAEJb,EAAIc,UAAUN,EAAQC,GACtBT,EAAIe,OAAOR,EAAQ,EAAKV,EAAQmB,KAAKC,GAAM,KAC3CjB,EAAIkB,UAAYP,EAChBX,EAAImB,OAAO,EAAG,GACdnB,EAAIoB,OAAO,GAAIV,GACfV,EAAIqB,SAEAX,EAAM,EACRV,EAAIsB,WAINhB,EAAKN,GAAK,EAAO,GAAIU,EAAW,GAANA,GAAYb,EAAqB,GAAdc,GAC7CL,EAAKN,GAAK,EAAO,GAAIU,EAAW,GAANA,EAAWb,EAAqB,GAAdc,GAE5CX,EAAIsB,WAaFhB,CAAKN,GAAK,EAAMI,IAAWC,IAAaV,EAAQE,EAAO,KACtD,CAACF,EAAQE,IAGV,YAAC,IAAD,KACE,uCAEA,sBAAQ0B,IAAK/B,EAAQY,MAfX,IAeyBC,OAdxB,MAeX,uBAEA,YAAC,EAAD,CACExB,MAAM,SACNC,IAAK,GACLC,IAAK,IACLC,KAAM,GACNC,MAAOU,EACPT,SAAUU,IAGZ,YAAC,EAAD,CACEf,MAAM,QACNC,IAAK,EACLC,IAAK,GACLC,KAAM,EACNC,MAAOY,EACPX,SAAUY","file":"component---src-pages-projects-fractal-trees-js-b3c55491d602c8880f52.js","sourcesContent":["import React from \"react\"\nimport \"./style.css\"\n\nconst RangeInput = ({ label, min, max, step, value, onChange }) => {\n  return (\n    <>\n      <label>{label}</label>\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={e => onChange(parseInt(e.target.value))}\n      />\n    </>\n  )\n}\n\nexport default RangeInput\n","import React, { useRef, useEffect, useState } from \"react\"\nimport Layout from \"../../components/layout\"\nimport RangeInput from \"../../components/input/range\"\n\nconst draw = (ctx, first, startX, startY, len, angle, branchWidth) => {\n  ctx.beginPath()\n  ctx.save()\n\n  ctx.translate(startX, startY)\n  ctx.rotate(first ? 0 : (angle * Math.PI) / 180)\n  ctx.lineWidth = branchWidth\n  ctx.moveTo(0, 0)\n  ctx.lineTo(0, -len)\n  ctx.stroke()\n\n  if (len < 8) {\n    ctx.restore()\n    return\n  }\n\n  draw(ctx, false, 0, -len, len * 0.8, -angle, branchWidth * 0.8)\n  draw(ctx, false, 0, -len, len * 0.8, angle, branchWidth * 0.8)\n\n  ctx.restore()\n}\n\nconst Draw = () => {\n  const canvas = useRef()\n  const width = 900\n  const height = 670\n  const [length, setLength] = useState(120)\n  const [angle, setAngle] = useState(40)\n\n  useEffect(() => {\n    const ctx = canvas.current.getContext(\"2d\")\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height)\n    draw(ctx, true, width / 2, height - 70, length, angle, 8)\n  }, [length, angle])\n\n  return (\n    <Layout>\n      <h1>Fractal Trees</h1>\n\n      <canvas ref={canvas} width={width} height={height} />\n      <br />\n\n      <RangeInput\n        label=\"length\"\n        min={40}\n        max={120}\n        step={10}\n        value={length}\n        onChange={setLength}\n      />\n\n      <RangeInput\n        label=\"angle\"\n        min={5}\n        max={50}\n        step={1}\n        value={angle}\n        onChange={setAngle}\n      />\n    </Layout>\n  )\n}\n\nexport default Draw\n"],"sourceRoot":""}