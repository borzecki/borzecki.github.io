{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/django-querysets","result":{"data":{"markdownRemark":{"id":"fbc6fa2b-18b4-5483-83a2-8a1640f13686","html":"<h1>Comparing queryset</h1>\n<p>Using Django ORM can lead to interesting problems - especially regarding logic operators.</p>\n<h2>Introduction</h2>\n<p>Let's introduce a problem by writing a simple query to fetch all active Users.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">></span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>is_acitve<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>User<span class=\"token punctuation\">:</span> eggs@test<span class=\"token punctuation\">.</span>com<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>User<span class=\"token punctuation\">:</span> bacon@test<span class=\"token punctuation\">.</span>com<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>User<span class=\"token punctuation\">:</span> spam@test<span class=\"token punctuation\">.</span>com<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Naturally you can test if it's empty using Querysets <code class=\"language-text\">exists</code> method, but what would happen if you try to compare it to something else. Let's say empty list?</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">></span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>is_acitve<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token boolean\">False</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>What if we tried to take a look at inactive users and try the same comparison.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">></span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>is_acitve<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">></span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>is_acitve<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token boolean\">False</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>This is of course \"normal\" behavior since types don't match right?</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">></span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">False</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>The result may seem unexpected or even misleading but it actually works in favor of Django ORM - because <code class=\"language-text\">QuerySet</code> class represents only lazy database lookup for a set of objects.</p>\n<p>What happens when you have to compare two querysets for identity when it doesn't give proper results for most obvious examples? Here's couple ideas how to handle this problem.</p>\n<h1>Solutions</h1>\n<h2>Use Counter</h2>\n<p>Dict subclass for counting hashable items.  Sometimes called a bag or multiset.  Elements are stored as dictionary key and their counts are stored as dictionary values.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter\nCounter<span class=\"token punctuation\">(</span>queryset_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Counter<span class=\"token punctuation\">(</span>queryset_b<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>Use simple set comparison</h2>\n<p>Very basic solution is to simply cast querysets to <code class=\"language-text\">set</code> to perform comparison.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>queryset_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>queryset_b<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><strong>Important remark: don't cast to <code class=\"language-text\">list</code> because then querysets can have different orders or may contain duplicates which will skew the results.</strong></p>","excerpt":"Comparing queryset Using Django ORM can lead to interesting problems - especially regarding logic operators. Introduction Let's introduce a problem by writing aâ€¦","frontmatter":{"date":"06 June, 2016","path":"/blog/django-querysets","title":"Django querysets"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{}}}